{"ast":null,"code":"import R from\"ramda\";var initialState={ids:[],search:\"\"};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"FETCH_PHONE_SUCCESS\":return R.merge(state,{ids:R.pluck(\"id\",action.payload)});case\"LOAD_MORE_SUCCESS\":{var ids=R.pluck(\"id\",action.payload);return R.merge(state,{ids:R.concat(ids,state.ids)});}case\"SEARCH_PHONE\":{console.log(\"text to be searched is \",action.payload);return R.merge(state,{search:action.payload});}default:return state;}});","map":{"version":3,"sources":["/Users/kal.kolacahill/KicksCompany/src/reducers/PhonesPage.js"],"names":["R","initialState","ids","search","state","action","type","merge","pluck","payload","concat","console","log"],"mappings":"AAAA,MAAOA,CAAAA,CAAP,KAAc,OAAd,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,GAAG,CAAE,EADc,CAEnBC,MAAM,CAAE,EAFW,CAArB,CAKA,eAAe,UAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CAC/C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,qBAAL,CACE,MAAON,CAAAA,CAAC,CAACO,KAAF,CAAQH,KAAR,CAAe,CACpBF,GAAG,CAAEF,CAAC,CAACQ,KAAF,CAAQ,IAAR,CAAcH,MAAM,CAACI,OAArB,CADe,CAAf,CAAP,CAGF,IAAK,mBAAL,CAA0B,CACxB,GAAMP,CAAAA,GAAG,CAAGF,CAAC,CAACQ,KAAF,CAAQ,IAAR,CAAcH,MAAM,CAACI,OAArB,CAAZ,CACA,MAAOT,CAAAA,CAAC,CAACO,KAAF,CAAQH,KAAR,CAAe,CACpBF,GAAG,CAAEF,CAAC,CAACU,MAAF,CAASR,GAAT,CAAcE,KAAK,CAACF,GAApB,CADe,CAAf,CAAP,CAGD,CACD,IAAK,cAAL,CAAqB,CACnBS,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAuCP,MAAM,CAACI,OAA9C,EACA,MAAOT,CAAAA,CAAC,CAACO,KAAF,CAAQH,KAAR,CAAe,CACpBD,MAAM,CAAEE,MAAM,CAACI,OADK,CAAf,CAAP,CAGD,CACD,QACE,MAAOL,CAAAA,KAAP,CAlBJ,CAoBD,CArBD","sourcesContent":["import R from \"ramda\";\n\nconst initialState = {\n  ids: [],\n  search: \"\",\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_PHONE_SUCCESS\":\n      return R.merge(state, {\n        ids: R.pluck(\"id\", action.payload),\n      });\n    case \"LOAD_MORE_SUCCESS\": {\n      const ids = R.pluck(\"id\", action.payload);\n      return R.merge(state, {\n        ids: R.concat(ids, state.ids),\n      });\n    }\n    case \"SEARCH_PHONE\": {\n      console.log(\"text to be searched is \", action.payload);\n      return R.merge(state, {\n        search: action.payload,\n      });\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}